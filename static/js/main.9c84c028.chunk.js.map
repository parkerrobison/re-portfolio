{"version":3,"sources":["assets/images/portrait/portrait2.JPG","components/Navigation/index.js","components/Header/index.js","components/About/index.js","components/Project/index.js","components/Portfolio/index.js","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","useState","className","name","map","page","currentPage","key","onClick","handleSubmit","Header","setCurrentPage","About","Container","Row","Col","sm","style","alignText","id","src","portrait2","width","alt","marginTop","Project","projects","p","i","md","ProjectName","imagePath","href","githubRepo","target","rel","deployedApp","Portfolio","ContactForm","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","Resume","prResume","filePath","download","Footer","App","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9c84c028.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait2.b8e91b4d.JPG\";","import React, {useState} from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nfunction Navigation(props) {\n  const pages = [\n    { name: \"About Me\" },\n    { name: \"Portfolio\" },\n    { name: \"Contact\" },\n    { name: \"Resume\" },\n  ];\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    // <Navbar light expand=\"md\">\n    //   <NavbarToggler onClick={toggle} />\n    //   <Collapse isOpen={isOpen} navbar>\n    //     <Nav className=\"mr-auto\" pills navbar>\n    //         {pages.map((page) => {\n    //             return (\n    //                 <NavItem\n    //                 className = {props.currentPage === page.name ? 'navActive' : ''} active key={page.name}>\n    //                     <NavLink  onClick ={ ()=> props.handleSubmit(page.name)} >{page.name}</NavLink>\n    //                 </NavItem>\n    //             )\n    //         })}      \n    //     </Nav>\n    //   </Collapse>\n    // </Navbar>\n    \n    <nav>\n        <ul className=\"flex-row\">\n            {pages.map((page) => (\n                <li\n                    className={`mx-1 ${\n                    props.currentPage === page.name ? 'navActive' : ''\n                    }`}\n                    key={page.name}\n                >\n                    <span onClick={ ()=> props.handleSubmit(page.name)}\n                    >\n                        {page.name}\n                    </span>\n                </li>\n            ))}\n        </ul>\n    </nav>\n  );\n}\nexport default Navigation;\n","import React from 'react';\nimport Navigation from '../Navigation';\n\nfunction Header (props) {\n    return(\n        <header className='flex-row'>\n            <h1>Parker Robison</h1>\n            <Navigation\n            handleSubmit={props.handleSubmit}\n            currentPage= {props.currentPage}\n            setCurrentPage= {props.setCurrentPage}>\n            </Navigation>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport portrait2 from '../../assets/images/portrait/portrait2.JPG';\nimport {Container, Row, Col} from 'reactstrap';\n\nfunction About() {\n    return(\n        <Container className=\"section-wrapper\">\n            <Row>\n                <Col sm=\"3\" style ={{ alignText: 'center'}}>\n                <h1 id='about'>About Me</h1>\n                    <div className='image-cropper'>\n                        <img src={portrait2} className='my-2 portrait' style={{ width: '100%' }} alt='portrait' />\n                    </div>\n                </Col>\n                <Col sm=\"9\">\n                    <p style={{ marginTop: '10%'}}>\n                        Hello! My name is Parker Robison. I enjoy coding, being outdoors, photography, and being active. I graduated from USU with a Bachelors degree in Kinesiology. In desiring to further my education and expand my skills,\n                        I enrolled in the University of Utah's coding bootcamp. I will soon be graduating from the bootcamp and will continue developing my coding skills. As a full stack developer, \n                        I'm focused on developing inspiring and helpful applications and websites. \n                    </p>\n                </Col>\n            </Row>\n            \n            \n        </Container>\n    )\n}\n\nexport default About;","import React from 'react';\nimport projects from '../../utils/project.json';\nimport {Row, Col, Container} from 'reactstrap';\n\nfunction Project() {\n    return(\n        <Container>\n            <Row>\n                {projects.map((p, i) => {\n                    return(\n                        <Col md=\"6\" className='project-wrapper' key={i} md={4}>\n                            <h2>{p.ProjectName}</h2>\n                            <img src={p.imagePath} \n                                alt={p.ProjectName}\n                                className= \"img-thumbnail project-image mx-1\" \n                            />\n                            <a href={p.githubRepo} target='_blank' rel=\"noopener noreferrer\" className=\"gh-link\">GitHub</a>\n                            <a href={p.deployedApp} target='_blank' rel=\"noopener noreferrer\" className=\"site-link\">Website</a>\n                        </Col>)\n\n                })}\n                </Row>\n            </Container>\n    )\n}\nexport default Project;","import React from 'react';\nimport Project from '../Project'\n\nfunction Portfolio() {\n    return(\n        <section className=\"section-wrapper\">\n            <h1>Portfolio</h1>\n                <div>\n                    <Project></Project>\n                </div>\n        </section>\n    );\n}\nexport default Portfolio;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport {Container, Row, Col} from 'reactstrap';\n\nfunction ContactForm() {\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function handleChange(e) {\n        \n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            if (!isValid) {\n                setErrorMessage('Your email is invalid.');\n              } else {\n                setErrorMessage('');\n              }\n        } else {\n            if (!e.target.value.length) {\n              setErrorMessage(`${e.target.name} is required.`);\n            } else {\n              setErrorMessage('');\n            }\n        } \n        if (!errorMessage) {\n            setFormState({...formState, [e.target.name]: e.target.value })\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    }\n    return(\n\n        <Container className=\"section-wrapper\">\n            <Row>\n                <Col md=\"12\">\n                <h1>Contact me</h1>\n                <p>If you'd like to reach out to me please email me at parkerobison@gmail.com</p>\n                <form id='contact-form' onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"message\">Message:</label>\n                        <textarea name=\"message\" defaultValue={message} onBlur={handleChange} />\n                    </div>\n                    {errorMessage && (\n                        <div>\n                            <p className=\"error-text\">{errorMessage}</p>\n                        </div>\n                        )}\n                    <button type=\"submit\">Submit</button>\n                </form>\n                </Col>\n            </Row>\n        </Container>\n        // <section className='contact-container section-wrapper'>\n        //     <h1>Contact me</h1>\n        //     <p>If you'd like to reach out to me please email me at parkerobison@gmail.com</p>\n        //     <form id='contact-form' onSubmit={handleSubmit}>\n        //         <div>\n        //             <label htmlFor=\"name\">Name:</label>\n        //             <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        //         </div>\n        //         <div>\n        //             <label htmlFor=\"email\">Email address:</label>\n        //             <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        //         </div>\n        //         <div>\n        //             <label htmlFor=\"message\">Message:</label>\n        //             <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        //         </div>\n        //         {errorMessage && (\n        //             <div>\n        //                 <p className=\"error-text\">{errorMessage}</p>\n        //             </div>\n        //             )}\n        //         <button type=\"submit\">Submit</button>\n        //     </form>\n        // </section>\n    )\n}\n\nexport default ContactForm;","  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport prResume from '../../utils/resume.json';\n\n\nfunction Resume() {\nreturn(\n    <Container className=\"section-wrapper\">\n        <Row>\n            <Col>\n            <h2>Resume</h2>\n        <a className= 'resume-download' href={prResume[0].filePath} download>\n            Download my resume\n        </a>\n        <div>\n            <h4>Front-end Experience</h4>\n            <ul>\n                <li>HTML</li>\n                <li>CSS</li>\n                <li>Javascript</li>\n                <li>JQuery</li>\n                <li>Responsive design</li>\n                <li>React</li>\n                <li>Bootstrap</li>\n                <li>Materialize</li>\n            </ul>\n            <h4>Back-end Experience</h4>\n            <ul>\n                <li>APIs</li>\n                <li>Node</li>\n                <li>Express</li>\n                <li>MySQL, Sequelize</li>\n                <li>NoSQL</li>\n            </ul>\n        </div>\n            </Col>\n        </Row>\n    </Container>\n)\n\n}\n\nexport default Resume;","import React from 'react';\n\nfunction Footer() {\n    return(\n        <footer>\n            <ul className='profile-links flex-row'>\n                <li className='mx-2'>\n                    <a href='https://github.com/parkerrobison' target='_blank' rel=\"noopener noreferrer\">GitHub</a>\n                </li>\n                <li className='mx-2'>\n                    <a href='https://www.linkedin.com/in/parker-robison-690972139/' target='_blank' rel=\"noopener noreferrer\">LinkedIn</a>\n                </li>\n                <li className='mx-2'>\n                    <a href='https://twitter.com/ParkerRobison2' target='_blank' rel=\"noopener noreferrer\">Twitter</a>\n                </li>\n            </ul>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, {useState} from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport ContactForm from './components/Contact'\nimport Resume from './components/Resume'\nimport Footer from './components/Footer';\n\n// AS AN employer looking for candidates with experience building single-page applications\n// I WANT to view a potential employee's deployed React portfolio of work samples\n// SO THAT I can assess whether they're a good candidate for an open position\n\n// GIVEN a single-page application portfolio for a web developer\n// WHEN I load the portfolio\n// THEN I am presented with a page containing a header, a section for content, and a footer\n\n// WHEN I load the portfolio the first time\n// THEN the About Me title and section are selected by default\n\nfunction App() {\n  const [currentPage, setCurrentPage]= useState('')\n  const handleSubmit = (page) => {\n       console.log(page)\n       setCurrentPage(page)\n  }\n  return (\n    <div>\n      \n      <Header \n        handleSubmit={handleSubmit}\n        currentPage= {currentPage}\n        setCurrentPage= {setCurrentPage}></Header>\n      <main>\n        {currentPage === 'Contact' ?   <ContactForm />:\n        currentPage === 'Portfolio' ? <Portfolio />:\n        currentPage === 'Resume' ? <Resume />:\n        <About />}        \n      </main>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}